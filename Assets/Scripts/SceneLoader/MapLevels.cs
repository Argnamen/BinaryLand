using System.Collections;
using System.Collections.Generic;
using UnityEngine;

[System.Serializable]
public class MapLevels
{
    public float[,] Levels(int numberLevel)
    {
        switch (numberLevel)
        {
            case 0:
                MirrorPlayer.isInvertMoveX = true;
                return new float[,] {{10,10,10,10,10,10,10,10,10,10,10,10,10,10,10},
{10,0,0,0,1,0,0,0,0,0,0,0,0,1,10},
{10,0,1,0,1,0,1,0,1,1,0,1,0,0,10},
{10,0,1,0,0,0,1,0,0,1,0,1,0,1,10},
{10,6,1,0,1,0,0,0,0,1,0,1,0,0,10},
{10,1,1,1,1,1,1,1,1,1,1,1,1,3,10},
{10,7,1,0,0,0,0,0,1,0,0,0,0,0,10},
{10,0,1,0,1,0,1,0,1,1,0,1,0,1,10},
{10,0,1,0,0,0,1,0,0,1,0,1,0,0,10},
{10,0,1,0,1,0,1,0,1,1,0,1,0,0,10},
{10,0,0,0,1,0,0,0,0,0,0,1,0,1,10},
{10,10,10,10,10,10,10,10,10,10,10,10,10,10,10}};


            case 1:
                MirrorPlayer.isInvertMoveX = true;
                return new float[,] {{10,10,10,10,10,10,10,10,10,10,10,10,10,10,10},
{10,0,1,0,1,0,0,0,0,0,0,1,1,0,10},
{10,0,0,0,1,0,0,1,0,1,0,0,0,0,10},
{10,1,1,0,0,0,1,1,0,1,1,0,1,0,10},
{10,6,0,0,1,0,0,1,0,0,0,0,1,0,10},
{10,1,1,1,1,1,1,1,1,1,1,1,1,3,10},
{10,7,1,0,0,0,0,1,0,1,0,0,1,0,10},
{10,0,0,0,1,1,0,1,0,1,0,1,1,0,10},
{10,0,1,0,1,0,0,0,0,0,0,1,0,0,10},
{10,0,0,0,1,1,0,1,0,1,1,1,1,0,10},
{10,0,1,0,0,0,0,1,0,0,0,0,0,0,10},
{10,10,10,10,10,10,10,10,10,10,10,10,10,10,10}};

            case 2:
                MirrorPlayer.isInvertMoveX = true;
                return new float[,] {
                   {10,10,10,10,10,10,10,10,10,10,10,10,10,10,10},
{10,0,0,0,0,0,0,0,1,0,0,0,0,0,10},
{10,0,1,0,1,0,1,1,1,1,1,1,1,0,10},
{10,1,1,1,1,0,0,0,0,0,0,0,1,0,10},
{10,6,0,0,0,0,1,0,1,0,1,0,0,0,10},
{10,1,1,1,1,1,1,1,1,1,1,1,1,3,10},
{10,7,1,0,0,0,4,1,0,0,0,1,0,0,10},
{10,0,0,0,0,0,0,1,0,1,1,1,1,0,10},
{10,0,1,1,1,1,0,0,0,0,0,0,0,0,10},
{10,0,0,0,0,1,0,0,1,0,1,1,1,0,10},
{10,1,1,1,1,1,0,0,1,0,0,0,1,5,10},
{10,10,10,10,10,10,10,10,10,10,10,10,10,10,10}};

            case 3:
                MirrorPlayer.isInvertMoveX = true;
                return new float[,] {{10,10,10,10,10,10,10,10,10,10,10,10,10,10,10},
{10,0,1,0,0,0,1,0,0,1,0,0,1,8,10},
{10,0,1,0,1,0,1,0,0,1,0,1,1,0,10},
{10,0,1,0,0,0,1,0,1,1,0,0,0,0,10},
{10,0,1,0,1,0,1,0,0,0,9,1,1,0,10},
{10,6,0,0,1,0,0,0,0,0,14,0,1,0,10},
{10,1,1,1,1,1,1,1,1,1,1,1,1,3,10},
{10,7,0,0,0,0,1,0,1,0,1,0,1,0,10},
{10,1,1,1,1,0,0,0,1,0,0,0,0,0,10},
{10,0,0,0,1,0,1,0,16,0,1,1,1,1,10},
{10,0,1,0,0,0,1,0,1,0,0,0,0,5,10},
{10,10,10,10,10,10,10,10,10,10,10,10,10,10,10}};


            case 4:
                MirrorPlayer.isInvertMoveX = true;
                return new float[,] {{10,10,10,10,10,10,10,10,10,10,10,10,10,10,10},
{10,0,1,0,1,0,1,0,0,0,0,0,1,0,10},
{10,0,1,0,0,0,1,0,1,1,1,0,0,0,10},
{10,0,1,0,1,0,0,0,1,0,1,0,1,1,10},
{10,6,0,0,1,0,1,1,1,0,0,0,0,0,10},
{10,1,1,1,1,1,1,1,1,1,1,1,1,3,10},
{10,7,0,0,1,0,0,1,0,0,0,1,0,0,10},
{10,0,1,1,1,0,1,1,0,1,0,1,1,0,10},
{10,0,1,0,0,0,0,0,0,1,0,0,0,0,10},
{10,0,0,0,1,1,1,1,0,0,0,1,1,1,10},
{10,0,1,0,0,0,0,1,0,1,0,0,0,0,10},
{10,10,10,10,10,10,10,10,10,10,10,10,10,10,10}};

            case 5:
                MirrorPlayer.isInvertMoveX = true;
                return new float[,] {{10,10,10,10,10,10,10,10,10,10,10,10,10,10,10},
{10,0,0,0,0,0,0,0,0,0,0,4,0,0,10},
{10,0,1,1,1,1,1,1,1,1,1,0,1,1,10},
{10,5,0,0,0,0,0,0,0,0,1,0,0,8,10},
{10,1,1,1,1,1,1,1,1,0,1,0,1,1,10},
{10,6,0,0,0,0,0,0,0,14,1,0,0,0,10},
{10,1,1,1,1,1,1,1,1,1,1,1,1,3,10},
{10,7,1,0,0,0,1,0,0,0,0,1,0,0,10},
{10,0,1,0,1,0,9,0,1,1,0,1,0,1,10},
{10,0,0,0,1,0,1,0,1,16,0,0,0,0,10},
{10,0,1,0,0,0,1,0,1,1,0,1,0,1,10},
{10,0,1,0,1,0,1,5,9,0,0,1,8,0,10},
{10,10,10,10,10,10,10,10,10,10,10,10,10,10,10}};


            case 6:
                MirrorPlayer.isInvertMoveX = true;
                return null;

            case 7:
                MirrorPlayer.isInvertMoveX = true;
                return new float[,] {{10,10,10,10,10,10,10,10,10,10,10,10,10,10,10},
{10,0,0,0,1,5,1,0,0,0,0,0,0,8,10},
{10,0,1,0,1,0,1,0,1,1,1,0,1,1,10},
{10,6,1,16,0,0,0,14,0,0,1,0,0,0,10},
{10,1,1,1,1,1,1,1,1,1,1,1,1,3,10},
{10,0,0,0,0,0,0,0,9,0,1,0,1,0,10},
{10,1,1,1,1,1,1,1,0,0,0,8,1,0,10},
{10,0,0,0,0,0,0,0,9,0,1,0,1,0,10},
{10,0,1,1,1,1,1,1,1,1,1,0,1,0,10},
{10,5,0,0,0,0,0,0,0,0,1,0,0,0,10},
{10,1,1,1,1,1,1,1,9,9,1,0,1,1,10},
{10,7,0,0,0,0,0,0,0,0,1,0,0,0,10},
{10,10,10,10,10,10,10,10,10,10,10,10,10,10,10}};
            case 8:
                MirrorPlayer.isInvertMoveX = true;
                return new float[,] {{10,10,10,10,10,10,10,10,10,10,10,10,10,10,10},
{10,0,1,5,1,0,1,8,0,0,1,5,0,0,10},
{10,0,9,0,1,0,0,0,1,0,1,1,1,14,10},
{10,0,1,0,9,0,1,0,1,0,0,0,0,0,10},
{10,6,1,0,1,0,1,14,0,0,1,0,1,0,10},
{10,1,1,1,1,1,1,1,1,1,1,1,1,3,10},
{10,7,0,0,0,0,0,15,1,8,0,1,0,0,10},
{10,1,1,0,1,0,1,1,1,0,0,1,0,0,10},
{10,0,1,4,1,5,0,0,9,0,1,1,0,1,10},
{10,0,0,0,1,1,1,1,1,0,9,0,0,0,10},
{10,0,1,0,0,0,0,5,1,0,1,1,0,1,10},
{10,0,1,0,1,1,1,1,1,0,0,1,0,0,10},
{10,10,10,10,10,10,10,10,10,10,10,10,10,10,10}};

            case 9:
                MirrorPlayer.isInvertMoveX = true;
                return new float[,] {{10,10,10,10,10,10,10,10,10,10,10,10,10,10,10},
{10,0,1,0,0,15,1,8,0,0,0,0,0,0,10},
{10,0,1,0,1,1,1,9,1,1,1,9,1,1,10},
{10,0,0,0,0,0,0,0,0,0,1,0,0,0,10},
{10,0,1,0,1,1,1,0,1,1,1,0,1,0,10},
{10,6,1,5,0,15,1,0,0,0,0,14,1,0,10},
{10,1,1,1,1,1,1,1,1,1,1,1,1,3,10},
{10,7,0,0,0,0,0,0,0,0,0,1,0,0,10},
{10,1,1,0,1,1,1,1,9,9,1,1,0,9,10},
{10,1,0,0,1,8,0,0,0,0,0,9,0,1,10},
{10,1,1,9,1,1,9,9,1,1,1,1,0,0,10},
{10,8,0,0,0,0,0,0,0,0,0,1,5,1,10},
{10,10,10,10,10,10,10,10,10,10,10,10,10,10,10}};

            case 10:
                MirrorPlayer.isInvertMoveX = true;
                return new float[,] {{10,10,10,10,10,10,10,10,10,10,10,10,10,10,10},
{10,0,1,0,0,0,1,0,0,5,1,0,0,0,10},
{10,0,1,0,1,0,1,0,1,1,1,0,1,0,10},
{10,6,0,0,1,16,0,0,0,0,0,0,1,0,10},
{10,1,1,1,1,1,1,1,1,1,1,1,1,3,10},
{10,7,0,0,16,0,0,0,0,0,0,0,8,0,10},
{10,1,1,1,1,0,1,1,1,1,1,1,1,4,10},
{10,0,0,0,0,0,1,0,0,0,0,0,0,8,10},
{10,0,1,1,1,1,1,4,1,1,1,1,1,1,10},
{10,0,0,0,0,4,1,0,0,0,0,0,0,5,10},
{10,1,1,1,1,0,1,1,1,1,1,1,1,0,10},
{10,0,0,0,0,5,1,0,0,0,0,0,0,0,10},
{10,10,10,10,10,10,10,10,10,10,10,10,10,10,10}};



            case 11:
                MirrorPlayer.isInvertMoveX = true;
                return new float[,] {{10,10,10,10,10,10,10,10,10,10,10,10,10,10,10},
{10,0,1,0,1,5,1,0,0,0,8,9,1,0,10},
{10,0,1,0,1,0,9,0,1,1,0,1,1,0,10},
{10,0,0,0,1,0,1,0,1,16,0,0,0,0,10},
{10,0,1,0,1,0,1,0,1,1,0,1,1,0,10},
{10,7,1,16,0,0,1,0,0,0,0,9,1,0,10},
{10,1,1,1,1,1,1,1,1,1,1,1,1,3,10},
{10,6,1,0,9,0,1,0,0,0,0,0,1,0,10},
{10,0,1,0,1,0,1,0,1,1,1,0,1,0,10},
{10,0,1,0,9,0,1,0,0,8,1,0,0,0,10},
{10,0,0,0,1,0,0,9,9,1,1,1,1,4,10},
{10,0,1,0,1,5,1,0,0,1,5,0,0,0,10},
{10,10,10,10,10,10,10,10,10,10,10,10,10,10,10}};

            case 12:
                MirrorPlayer.isInvertMoveX = true;
                return new float[,] {{10,10,10,10,10,10,10,10,10,10,10,10,10,10,10},
{10,5,0,0,0,0,1,0,1,0,0,0,1,0,10},
{10,1,1,1,1,0,1,0,1,0,1,0,9,0,10},
{10,0,0,0,0,0,1,0,9,0,1,0,1,0,10},
{10,14,1,1,1,1,1,0,1,0,1,0,1,0,10},
{10,6,0,0,0,0,0,0,1,0,1,8,1,0,10},
{10,1,1,1,1,1,1,1,1,1,1,1,1,3,10},
{10,7,1,0,0,0,8,1,0,0,0,1,0,5,10},
{10,0,1,0,1,1,1,1,0,1,0,1,1,0,10},
{10,0,1,0,0,15,0,0,0,1,0,0,1,0,10},
{10,0,1,0,1,1,1,1,0,1,0,1,1,0,10},
{10,0,0,0,0,0,0,1,0,1,0,0,0,0,10},
{10,10,10,10,10,10,10,10,10,10,10,10,10,10,10}};

            case 13:
                MirrorPlayer.isInvertMoveX = true;
                return null;

            case 14:
                MirrorPlayer.isInvertMoveX = true;
                return new float[,] {{10,10,10,10,10,10,10,10,10,10,10,10,10,10,10},
{10,0,0,0,1,0,0,5,1,0,0,0,0,0,10},
{10,0,1,0,1,0,1,0,1,1,1,1,0,1,10},
{10,0,1,0,0,0,1,0,0,0,0,1,0,0,10},
{10,0,1,0,1,1,1,0,1,1,1,1,0,1,10},
{10,7,1,0,0,8,1,0,0,0,0,0,8,0,10},
{10,1,1,1,1,1,1,1,1,1,1,1,1,3,10},
{10,6,1,0,0,0,0,0,5,1,0,8,1,0,10},
{10,0,1,9,1,9,1,0,0,1,0,1,1,0,10},
{10,0,0,0,1,0,1,1,1,1,0,0,0,0,10},
{10,0,1,0,1,0,0,1,0,1,0,1,1,1,10},
{10,16,0,0,0,0,0,0,0,0,0,0,0,0,10},
{10,10,10,10,10,10,10,10,10,10,10,10,10,10,10}};

            case 15:
                MirrorPlayer.isInvertMoveX = true;
                return new float[,]{ { 10,10,10,10,10,10,10,10,10,10,10,10,10,10,10},
{ 10,0,9,0,1,8,0,1,0,0,0,1,9,0,10},
{ 10,0,1,0,1,1,0,1,0,1,0,1,1,0,10},
{ 10,0,1,0,9,1,0,1,0,1,0,1,9,0,10},
{ 10,0,1,0,1,1,0,1,0,1,0,1,1,0,10},
{ 10,6,1,0,0,0,0,9,5,1,0,0,0,0,10},
{ 10,1,1,1,1,1,1,1,1,1,1,1,1,3,10},
{ 10,7,0,0,9,0,1,5,1,0,0,0,0,0,10},
{ 10,0,1,1,1,0,1,0,1,1,1,1,1,0,10},
{ 10,0,0,0,1,0,1,16,0,0,0,0,0,0,10},
{ 10,1,1,1,1,0,9,0,1,0,1,1,1,1,10},
{ 10,0,0,0,0,0,1,0,1,0,0,0,8,1,10},
{ 10,10,10,10,10,10,10,10,10,10,10,10,10,10,10}
        };

            case 16:
                MirrorPlayer.isInvertMoveX = true;
                return new float[,] {{10,10,10,10,10,10,10,10,10,10,10,10,10,10,10},
{10,16,0,0,0,0,0,0,0,0,0,1,0,0,10},
{10,0,1,1,1,1,1,1,0,1,0,1,0,1,10},
{10,5,0,0,0,0,0,1,0,1,8,1,0,0,10},
{10,9,1,1,1,1,0,1,0,1,1,1,0,1,10},
{10,6,0,0,0,9,0,1,0,0,0,0,0,0,10},
{10,1,1,1,1,1,1,1,1,1,1,1,1,3,10},
{10,7,0,0,0,0,0,1,0,0,0,8,1,0,10},
{10,0,1,1,1,1,1,1,0,1,1,1,1,0,10},
{10,4,0,0,1,16,0,0,0,0,1,0,0,0,10},
{10,0,1,1,1,0,1,1,1,16,0,0,1,1,10},
{10,0,0,0,0,0,0,5,1,0,1,0,0,5,10},
{10,10,10,10,10,10,10,10,10,10,10,10,10,10,10}};

            case 17:
                MirrorPlayer.isInvertMoveX = true;
                return new float[,] {{10,10,10,10,10,10,10,10,10,10,10,10,10,10,10},
{10,0,1,0,0,0,1,0,0,1,0,1,0,0,10},
{10,0,1,0,1,0,1,0,0,1,0,1,0,1,10},
{10,0,1,0,0,0,1,0,1,1,0,1,0,0,10},
{10,0,1,0,1,0,1,0,0,0,0,1,0,1,10},
{10,6,0,0,1,0,0,0,0,1,0,0,0,0,10},
{10,1,1,1,1,1,1,1,1,1,1,1,1,3,10},
{10,7,1,8,1,0,1,5,1,0,1,0,0,0,10},
{10,0,1,0,1,0,1,0,0,0,0,0,1,1,10},
{10,0,16,0,1,0,0,0,1,1,1,0,0,1,10},
{10,0,1,0,1,0,1,0,1,0,0,0,1,1,10},
{10,0,1,0,0,0,1,0,1,1,1,0,0,8,10},
{10,10,10,10,10,10,10,10,10,10,10,10,10,10,10}};

            case 18:
                MirrorPlayer.isInvertMoveX = true;
                return new float[,] {{10,10,10,10,10,10,10,10,10,10,10,10,10,10,10},
{10,0,0,0,0,0,0,0,0,0,0,0,0,0,10},
{10,0,0,1,0,1,1,1,1,1,1,1,4,1,10},
{10,0,1,1,0,0,0,0,1,0,0,0,0,8,10},
{10,0,0,1,0,1,1,1,1,0,1,1,1,1,10},
{10,7,1,1,0,0,0,5,1,0,0,0,0,0,10},
{10,1,1,1,1,1,1,1,1,1,1,1,1,3,10},
{10,6,1,0,0,0,8,1,0,1,0,0,0,0,10},
{10,0,1,0,1,1,1,1,0,1,0,1,1,0,10},
{10,0,1,0,0,0,0,0,0,9,0,1,0,0,10},
{10,0,1,0,1,1,1,0,1,1,0,1,1,0,10},
{10,0,0,0,0,0,1,0,1,0,9,0,0,5,10},
{10,10,10,10,10,10,10,10,10,10,10,10,10,10,10}};



            case 19:
                MirrorPlayer.isInvertMoveX = true;
                return new float[,] {{10,10,10,10,10,10,10,10,10,10,10,10,10,10,10},
{10,0,0,0,0,0,0,0,0,1,0,0,0,0,10},
{10,1,1,1,1,1,1,1,0,1,0,1,1,1,10},
{10,0,0,0,0,0,0,0,0,0,0,0,0,0,10},
{10,7,1,1,1,1,1,1,1,1,0,1,0,0,10},
{10,1,1,1,1,1,1,1,1,1,1,1,1,3,10},
{10,6,1,0,0,0,0,0,8,1,5,1,0,0,10},
{10,0,1,1,0,1,1,1,1,1,0,1,0,0,10},
{10,0,0,1,0,16,0,0,0,0,0,1,1,0,10},
{10,0,1,1,0,1,1,1,1,1,0,0,0,0,10},
{10,16,0,0,0,0,0,1,0,1,1,1,4,1,10},
{10,0,0,1,0,1,1,1,0,0,0,0,0,8,10},
{10,10,10,10,10,10,10,10,10,10,10,10,10,10,10}};

            case 20:
                MirrorPlayer.isInvertMoveX = true;
                return null;

            case 21:
                MirrorPlayer.isInvertMoveX = true;
                return new float[,] {{10,10,10,10,10,10,10,10,10,10,10,10,10,10,10},
{10,0,1,0,0,0,0,0,4,1,1,1,1,1,10},
{10,0,1,0,1,0,0,1,0,0,0,0,0,1,10},
{10,0,1,0,1,0,0,1,8,0,0,0,0,1,10},
{10,0,1,0,1,1,1,1,0,1,1,1,1,1,10},
{10,6,0,0,1,5,0,0,0,0,0,0,0,0,10},
{10,1,1,1,1,1,1,1,1,1,1,1,1,3,10},
{10,16,0,0,0,0,0,0,0,0,1,0,0,0,10},
{10,0,1,1,1,1,1,1,1,0,1,0,1,1,10},
{10,14,0,0,0,0,0,0,1,0,1,0,0,0,10},
{10,1,1,1,1,1,1,0,1,0,1,0,1,1,10},
{10,7,0,0,0,0,0,0,1,0,0,0,0,8,10},
{10,10,10,10,10,10,10,10,10,10,10,10,10,10,10}};

            case 22:
                MirrorPlayer.isInvertMoveX = true;
                return new float[,] {{10,10,10,10,10,10,10,10,10,10,10,10,10,10,10},
{10,0,1,0,0,0,0,0,1,0,0,8,1,0,10},
{10,0,1,0,1,0,0,0,1,0,1,1,1,0,10},
{10,0,0,0,1,0,1,1,1,0,0,0,0,0,10},
{10,0,1,0,1,0,0,0,1,0,1,0,1,0,10},
{10,6,1,0,0,0,0,0,0,0,1,0,1,0,10},
{10,1,1,1,1,1,1,1,1,1,1,1,1,3,10},
{10,7,1,0,0,0,0,1,0,1,0,1,0,0,10},
{10,0,0,0,1,1,1,1,0,1,0,1,0,0,10},
{10,0,1,0,0,0,0,0,0,0,0,0,0,1,10},
{10,0,1,0,1,1,1,1,0,1,1,1,0,0,10},
{10,0,1,0,0,0,8,1,0,0,0,1,5,1,10},
{10,10,10,10,10,10,10,10,10,10,10,10,10,10,10}};


            case 23:
                MirrorPlayer.isInvertMoveX = true;
                return new float[,] {{10,10,10,10,10,10,10,10,10,10,10,10,10,10,10},
{10,0,1,0,1,0,1,0,1,0,0,0,1,5,10},
{10,0,1,0,0,0,0,0,1,0,1,0,1,0,10},
{10,0,1,0,1,1,9,0,1,0,1,0,1,0,10},
{10,0,9,0,0,1,0,0,1,0,1,0,1,0,10},
{10,0,1,0,1,1,0,0,1,0,1,0,1,0,10},
{10,0,1,0,0,0,9,0,9,0,9,0,0,0,10},
{10,0,1,0,1,1,1,1,0,1,0,1,1,0,10},
{10,6,1,0,0,0,8,1,0,1,0,0,1,0,10},
{10,1,1,1,1,1,1,1,1,1,1,1,1,3,10},
{10,7,1,0,0,0,1,0,0,0,1,0,0,0,10},
{10,0,0,0,1,0,0,0,1,0,0,0,1,0,10},
{10,10,10,10,10,10,10,10,10,10,10,10,10,10,10}};

            case 24:
                MirrorPlayer.isInvertMoveX = true;
                return new float[,] {{10,10,10,10,10,10,10,10,10,10,10,10,10,10,10},
{10,0,0,0,1,0,0,0,1,0,0,1,0,0,10},
{10,0,1,0,1,0,1,0,1,0,1,1,0,1,10},
{10,0,1,0,1,0,1,0,1,0,0,0,0,0,10},
{10,0,1,0,1,0,1,0,1,0,1,1,1,0,10},
{10,7,1,0,0,0,1,0,0,0,0,0,1,0,10},
{10,1,1,1,1,1,1,1,1,1,1,1,1,3,10},
{10,6,0,0,1,0,0,0,1,0,0,1,0,0,10},
{10,0,1,0,1,0,1,0,1,0,1,1,0,1,10},
{10,0,1,0,1,0,1,0,1,0,0,0,0,0,10},
{10,0,1,0,1,0,1,0,1,0,1,1,1,0,10},
{10,0,1,0,0,0,1,0,0,0,0,0,1,0,10},
{10,10,10,10,10,10,10,10,10,10,10,10,10,10,10}};

            case 25:
                MirrorPlayer.isInvertMoveX = true;
                return new float[,] {{10,10,10,10,10,10,10,10,10,10,10,10,10,10,10},
{10,0,0,0,0,1,16,0,0,0,8,1,0,0,10},
{10,0,1,1,0,1,0,1,0,1,1,1,0,1,10},
{10,0,0,1,0,1,0,1,0,0,0,0,0,1,10},
{10,0,0,1,0,0,0,1,0,1,1,1,0,0,10},
{10,0,1,1,5,1,0,1,0,0,0,1,0,1,10},
{10,7,0,0,14,1,16,0,0,0,0,1,0,0,10},
{10,1,1,1,1,1,1,1,1,1,1,1,1,3,10},
{10,6,1,0,0,0,0,0,1,0,0,0,0,0,10},
{10,0,1,0,1,14,1,0,1,0,1,1,1,0,10},
{10,0,1,1,1,0,1,0,16,0,0,8,1,0,10},
{10,0,0,0,0,0,1,5,1,0,0,0,1,0,10},
{10,10,10,10,10,10,10,10,10,10,10,10,10,10,10}};

            case 26:
                MirrorPlayer.isInvertMoveX = true;
                return new float[,] {{10,10,10,10,10,10,10,10,10,10,10,10,10,10,10},
{10,0,1,0,0,0,0,5,1,0,0,0,0,8,10},
{10,0,1,0,1,9,1,1,1,0,1,1,1,0,10},
{10,0,1,0,1,16,0,0,0,0,0,0,1,0,10},
{10,0,1,0,1,9,1,1,1,0,1,1,1,0,10},
{10,7,9,0,0,0,0,0,1,0,0,0,0,0,10},
{10,1,1,1,1,1,1,1,1,1,1,1,1,3,10},
{10,6,1,8,1,0,1,0,1,0,1,0,1,0,10},
{10,0,1,0,1,0,0,0,0,16,0,0,0,0,10},
{10,0,1,0,1,0,1,1,0,1,0,1,1,0,10},
{10,0,1,0,1,0,5,1,0,1,0,0,1,0,10},
{10,16,0,0,0,9,9,1,0,1,0,0,1,5,10},
{10,10,10,10,10,10,10,10,10,10,10,10,10,10,10}};
        }



        return null;
    }
}
